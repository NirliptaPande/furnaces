import numpy as np
import joblib
import gc
def scores(idx):
    xtest = np.append(x_test,np.transpose([echoes_test[:,idx]]),axis = 1)
    xtrain = np.append(x_train,np.transpose([echoes_train[:,idx]]),axis = 1)
    model = joblib.load('../output/month_mean/feature%s.joblib'%idx)
    r_squared[(idx+2,0)] = model.score(xtrain,y_train)
    r_squared[(idx+2,1)] = model.score(xtest,y_test)
    del(model)
    gc.collect()
r_squared = np.random.rand(9,2)
x_test  = np.load('../data/test_monthmean.npy')
x_test = x_test.reshape((x_test.shape[0],-1,x_test.shape[-1]))
x_test = np.delete(x_test,(57,58,59),axis = 1)
x_test = x_test.reshape((-1,38))
y_test = np.copy(x_test[:,15])
x_test = np.delete(x_test,[0,1,2,15,18,19,21,22,23,24,25,26,32,36],axis = 1)
x_train = np.load("../data/mm_balanced.npy")
y_train = x_train[:,15].copy()
x_train = np.delete(x_train,[0,1,2,15,18,19,21,22,23,24,25,26,32,36],axis = 1)
model = joblib.load('../output/month_mean/feature_all.joblib')
r_squared[(0,0)] = model.score(x_train,y_train)
r_squared[(0,1)] = model.score(x_test,y_test)
del(model)
gc.collect()
echoes_train = np.copy(x_train[:,[3,11,12,15,21,22,23]])
echoes_test = x_test[:,[3,11,12,15,21,22,23]].copy()
x_train = np.delete(x_train,[3,11,12,15,21,22,23],axis = 1)
x_test = np.delete(x_test,[3,11,12,15,21,22,23],axis = 1)
model = joblib.load('../output/month_mean/feature_none.joblib')
r_squared[(1,0)] = model.score(x_train,y_train)
r_squared[(1,1)] = model.score(x_test,y_test)
del(model)
gc.collect()
for i in range(echoes_train.shape[1]):
    scores(i)
np.save('../output/month_mean/r_squared.npy',r_squared)